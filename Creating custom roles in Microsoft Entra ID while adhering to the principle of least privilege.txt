

Creating custom roles in Microsoft Entra ID while adhering to the principle of least privilege involves defining roles with only the necessary permissions required for specific tasks. Here’s a detailed guide on how to do this using the Microsoft Graph API:

Prerequisites
1. Microsoft Entra ID P1 or P2 license.
2. Admin consent for using Graph Explorer or Microsoft Graph API.
3. Microsoft Graph PowerShell module installed.

Steps to Create Custom Roles

#1. Install Microsoft Graph PowerShell Module
If you haven't already installed the Microsoft Graph PowerShell module, you can do so using the following command:
```powershell
Install-Module Microsoft.Graph -Scope CurrentUser
```

#2. Connect to Microsoft Graph
You need to connect to Microsoft Graph with the necessary permissions:
```powershell
Connect-MgGraph -Scopes "RoleManagement.ReadWrite.Directory"
```

#3. Define the Custom Role
Create a custom role by specifying the necessary permissions. Here’s a PowerShell script to create a custom role with minimal permissions:

```powershell
# Connect to Microsoft Graph
Connect-MgGraph -Scopes "RoleManagement.ReadWrite.Directory"

# Define the role permissions
$rolePermissions = @(
    @{
        "allowedResourceActions" = @(
            "microsoft.directory/applications/credentials/update",
            "microsoft.directory/applications/basic/update"
        )
    }
)

# Create the custom role
$customRole = New-MgRoleManagementDirectoryRoleDefinition -DisplayName "Custom Application Manager" -Description "Can manage basic aspects of application registrations." -RolePermissions $rolePermissions -IsEnabled $true

# Output the custom role details
$customRole


#4. Assign the Custom Role
Once the custom role is created, you can assign it to users or groups. Here’s how to assign the custom role to a user:

# Define the user and role details
$userId = "user-object-id"
$roleId = $customRole.Id

# Assign the custom role to the user
New-MgRoleManagementDirectoryRoleAssignment -PrincipalId $userId -RoleDefinitionId $roleId -DirectoryScopeId "/"


Detailed Explanation
1. Connect to Microsoft Graph: This step ensures you have the necessary permissions to create and assign roles.
2. Define the Role Permissions: Specify only the permissions required for the role. In this example, the role can update application credentials and basic properties.
3. Create the Custom Role: Use the `New-MgRoleManagementDirectoryRoleDefinition` cmdlet to create the role with the specified permissions.
4. Assign the Custom Role: Use the `New-MgRoleManagementDirectoryRoleAssignment` cmdlet to assign the role to a user.

Best Practices
- Least Privilege: Ensure the role includes only the permissions necessary for the tasks the role will perform.
- Review Regularly: Periodically review and update roles to ensure they still align with the principle of least privilege.
- Monitor Usage: Use monitoring tools to track the usage of roles and adjust permissions as needed.

Additional Resources
- Microsoft Graph API Documentation
- Microsoft Graph PowerShell SDK
- [Create and assign a custom role in Microsoft Entra ID](https://learn.microsoft.com/en-us/entra/identity/role-based-access-control/custom-create)[1](https://learn.microsoft.com/en-us/entra/identity/role-based-access-control/custom-create)

If you have any specific questions or need further assistance, feel free to ask!

